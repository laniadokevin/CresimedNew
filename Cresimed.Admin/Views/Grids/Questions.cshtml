
@using System.Security.Claims;
@using System.Data
@using Cresimed.Core.Entities.ViewModel.Admin.Grid
@model QuestionGridViewModel
    
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userId = User.FindFirst(ClaimTypes.Name).Value;
    var prevDisabled = !Model.Questions.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Questions.HasNextPage ? "disabled" : "";
}

<!-- partial -->

        <div class="main-panel">
            <div class="content-wrapper">
                
            <h1 class="h1">Questions</h1>
            <br />
                
                 <form asp-action="Questions" method="get">
                        <div class="row">
                        <div class="col-12">
                        <div class="form-actions no-color">
                            <div class="row">
                        <div class="col-md-12">
                          <div class="form-group row">
                            <label class="col-sm-1 col-form-label">Search: </label>
                            <div class="col-sm-3">
                                <input type="text" name="SearchString"  class="form-control" value="@ViewData["CurrentFilter"]" />
                            </div>
                            <label class="col-sm-1 col-form-label">Category: </label>
                            <div class="col-sm-2">
                             <div class="form-group row">
                                  <select  name="CategoryFilter" class="form-control form-control-sm">
                                   @for (int i = 0; i < @Model.Categories.Count(); i++)
                                      {
                                          if(ViewData["CurrentCategoryFilter"].ToString() == Model.Categories[i].CategoryID.ToString())
                                        {
                                            <option value="@Model.Categories[i].CategoryID" selected>                                        
                                                @Html.Raw(Model.Categories[i].Name)
                                            </option>
                                        }
                                        else
                                        {
                                            <option value="@Model.Categories[i].CategoryID">                                        
                                                @Html.Raw(Model.Categories[i].Name)
                                            </option>
                                        }
                                    }
                            
                                  </select>
                                </div>
                            </div>
                            <label class="col-sm-1 col-form-label">Specialty: </label>
                             <div class="col-sm-2">
                             <div class="form-group row">
                                  <select name="SpecialtyFilter" class="form-control form-control-sm">
                                        
                                      @for (int i = 0; i < @Model.Specialties.Count(); i++)
                                {
                                      if(ViewData["CurrentSpecialtyFilter"].ToString() == Model.Specialties[i].SpecialtyID.ToString())
                                        {
                                            <option value="@Model.Specialties[i].SpecialtyID" selected>                                        
                                                @Html.Raw(Model.Specialties[i].Name)
                                            </option>
                                        }
                                        else
                                        {
                                            <option value="@Model.Specialties[i].SpecialtyID">                                        
                                                @Html.Raw(Model.Specialties[i].Name)
                                            </option>
                                        }
                                }

                                  </select>
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <button type="submit" class="btn btn-secondary" >
                                    <i class="mdi mdi-magnify"> </i>
                                </button>
                                
                                    <a asp-action="Questions" class="btn btn-primary"> <i class="mdi mdi-refresh"> </i> </a>
                                <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#exampleModal">
                                    <i class="mdi mdi-plus"> </i>
                                </button>
                                    <a href="@Url.Action("ImportQuestions","Edition")" class="btn btn-info"> <i class="mdi mdi-import"> </i> </a>
                                
                            </div>
                          </div>
                        </div>
                       
                      </div>
                           
                        </div>
                           
                        </div>
                    </div>
                </form>
                <h6>
                    Total: @ViewData["TotalQuestions"] &nbsp;&nbsp
                    Filtered: @ViewData["FilteredQuestions"] &nbsp;&nbsp
                    Showing: @ViewData["ShowingQuestions"] &nbsp;&nbsp

                </h6>
                <div class="row">
                    <div class="table-responsive">
                      <table class="table table-hover">
                        <thead>
                          <tr>
                            <th>
                                <a asp-action="Questions" asp-route-sortOrder="@ViewData["IDSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                    ID
                                </a>
                            </th>
                             <th>
                                Question
                            </th>
                            <th>
                                <a asp-action="Questions" asp-route-sortOrder="@ViewData["CategoriesSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                    Category
                                </a>
                            </th>
                             <th>
                                <a asp-action="Questions" asp-route-sortOrder="@ViewData["SpecialtiesSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                    Specialty
                                </a>
                            </th>
@*
                            <th>
                                <a asp-action="Questions" asp-route-sortOrder="@ViewData["CareersSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                    Career
                                </a>
                            </th>
                            <th>
                                <a asp-action="Questions" asp-route-sortOrder="@ViewData["CountriesSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                    Country
                                </a>
                            </th>
*@
                            <th></th>
                          </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < @Model.Questions.Count(); i++)
                            {
                                <tr>
                                    <td>
                                        @Html.Raw(Model.Questions[i].QuestionID)
                                    </td>
                                    <td>
                                        @Html.Raw(Model.Questions[i].QuestionText)
                                    </td>
                                    <td class="text">
                                        @Html.Raw(Model.Questions[i].Category.Name)
                                    </td>
                                    <td>
                                        @Html.Raw(Model.Questions[i].Specialty.Name)
                                    </td>
@*
                                    <td class="text">
                                        @Html.Raw(Model.Questions[i].Career.Name)
                                    </td>
                                    <td>
                                        @Html.Raw(Model.Questions[i].Country.Name)
                                    </td>
*@                                    
                                    <td>
                                             
                                        <a href="@Url.Action("ViewQuestion", "Views",new { id = @Model.Questions[i].QuestionID })">
                                            <i class="mdi mdi-pencil"></i>
                                        </a>
                                        <a href="@Url.Action("DeleteQuestion", "Edition",new { id = @Model.Questions[i].QuestionID })">
                                            <i class='mdi mdi-delete'></i>
                                        </a>
                                    
                                    </td>
                                </tr>
                            }
                        </tbody>
                      </table>
                    </div>
                </div>
            <br />

                <div class="row">
                        <div class="col-4">
                        </div>
                        <div class="col-4">

                            <a asp-action="Questions"
                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                               asp-route-pageNumber="@(Model.Questions.PageIndex - 1)"
                               asp-route-currentFilter="@ViewData["CurrentFilter"]"
                               class="btn btn-default @prevDisabled">
                                Previous
                            </a>
                            <a asp-action="Questions"
                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                               asp-route-pageNumber="@(Model.Questions.PageIndex + 1)"
                               asp-route-currentFilter="@ViewData["CurrentFilter"]"
                               class="btn btn-default @nextDisabled">
                                Next
                            </a>
                        </div>
                        <div class="col-4">
                        </div>
                    </div>
            </div>
        </div>
        <!-- Modal -->
        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
          <div class="modal-dialog modal-lg">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">New Question</h5>
                <button type="button" class="btn-secondary" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
            @using (Html.BeginForm("NewQuestion", "Edition", FormMethod.Post, new { @id = "NewQuestionForm", @enctype = "multipart/form-data" }))
                {
                    <div class="modal-body">
                        <div class="row" style="margin-bottom:20px">
                            <span id="errorMsgForm" style="color:red;">

                            </span>
                        </div>
                        
                        <div class="row">
                            <div class="form-group">
                                <label >Text</label>
                                @Html.TextAreaFor(m => m.NewQuestion.QuestionText, new { @maxlength = "8000", @class="form-control",@id="NewQuestionQuestionText", @style = "resize: vertical;height:20vh", @placeholder="Question Text", @required="required" })
                    
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group">
                                <label >Explanation</label>
                                @Html.TextAreaFor(m => m.NewQuestion.Explanation, new { @maxlength = "8000", @class="form-control",@id="NewQuestionExplanation", @style = "resize: vertical;height:20vh", @placeholder="Explanation", @required="required" })
                    
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group">
                                <label>KeyWords</label>
                                <div class="form-group">
                                     <button id="addRowKeyWord" type="button" class="btn btn-info">Add</button>
                                     <div id="newRowKeyWord">
                                         <input type="hidden" id="totalKeyWord" value="0" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                        <div class="col">

                            <div class="form-group">
                                <label for="NewQuestionQuestionImage">Question Image</label>
                                <input type="file" asp-for=File accept="image/png, image/gif, image/jpeg" id="NewQuestionQuestionImage">
                            </div>
                        </div>
                        <div class="col">
                            
                            <div class="form-group">
                                <label for="NewQuestionExplanationImage">Explanation Image</label>
                                <input type="file" asp-for=AnswerFile accept="image/png, image/gif, image/jpeg" id="NewQuestionExplanationImage">
                            </div>
                        </div>

                        </div>
                        <div class="row">
                        <div class="col">
                            <div class="form-group specialtiesClass ">
                                <label for="">Specialty</label>

                                <select multiple="multiple" id="NewQuestionSpecialtyID" class="select2-selection select2-selection--multiple" asp-for="@Model.NewSpecialties" asp-items="(List<SelectListItem>)@ViewData["SpecialtiesList"]">

                                </select>
                            </div>
                            </div>
                        <div class="col">
                               <div class="form-group">
                                <label for="exampleFormControlSelect3">Category</label>
                                @Html.DropDownListFor(m=>m.NewQuestion.CategoryID, new SelectList(Model.Categories , "CategoryID", "Name"),new {@class="form-control form-control-sm",@id="NewQuestionCategoryID", @required="required"})
                            </div>
                            </div>
                        </div>
                        <!--
                        <div class="row">
                            <div class="form-group">
                                <label for="exampleFormControlSelect3">Career</label>
                                @Html.DropDownListFor(m=>m.NewQuestion.CareerID, new SelectList(Model.Careers , "CareerID", "Name"),"Select Career ",new {@class="form-control form-control-sm",@id="NewQuestionCareerID"})
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group">
                                <label for="exampleFormControlSelect3">Country</label>
                                @Html.DropDownListFor(m=>m.NewQuestion.CountryID, new SelectList(Model.Countries , "CountryID", "Name"),"Select Country ",new {@class="form-control form-control-sm",@id="NewQuestionCountryID"})
                            </div>
                        </div>
                        -->

                            @Html.HiddenFor(m=>m.NewQuestion.CareerID)
                            @Html.HiddenFor(m=>m.NewQuestion.CountryID)
                            
                            <input type="hidden" name="NewAnswers[0].IsCorrect" value="false" id="NewAnswers0IsCorrect" />
                            <input type="hidden" name="NewAnswers[1].IsCorrect" value="false" id="NewAnswers1IsCorrect" />
                            <input type="hidden" name="NewAnswers[2].IsCorrect" value="false" id="NewAnswers2IsCorrect" />
                            <input type="hidden" name="NewAnswers[3].IsCorrect" value="false" id="NewAnswers3IsCorrect" />
                            

                    <div class="row">
                        <div class="form-group">
                            <label>Answers</label>
                            <div class="form-group">
                                <button id="addRowAnswer" type="button" class="btn btn-info">Add</button>
                                <div id="newRowAnswer">
                                    <input type="hidden" id="totalAnswers" value="0" />
                                </div>
                            </div>
                        </div>
                    </div>
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <input type="button" id="btnSubmitQuestion" class="btn btn-primary" value="Save"/>
                  </div>
                }
            </div>
          </div>
        </div>  
          
    @section Scripts {

    <!-- plugins:js -->
    <script src="~/vendors/js/vendor.bundle.base.js"></script>
    <!-- endinject -->
    <!-- Plugin js for this page -->
    <script src="~/vendors/chart.js/Chart.min.js"></script>
    <script src="~/vendors/progressbar.js/progressbar.min.js"></script>
    <script src="~/vendors/jvectormap/jquery-jvectormap.min.js"></script>
    <script src="~/vendors/jvectormap/jquery-jvectormap-world-mill-en.js"></script>
    <script src="~/vendors/owl-carousel-2/owl.carousel.min.js"></script>
    <script src="~/js/jquery.cookie.js" type="text/javascript"></script>
    <!-- End plugin js for this page -->
    <!-- inject:js -->
    <script src="~/js/off-canvas.js"></script>
    <script src="~/js/hoverable-collapse.js"></script>
    <script src="~/js/misc.js"></script>
    <script src="~/js/settings.js"></script>
    <script src="~/js/todolist.js"></script>
    <!-- endinject -->
    <!-- Custom js for this page -->
    <script src="~/js/dashboard.js"></script>
    <!-- End custom js for this page -->
     <script>
        var errorMsg = "";
        var statusNQ = true;
        var bool_value0 = false;
        var bool_value1 = false;
        var bool_value2 = false;
        var bool_value3 = false;
       
        function handleTrueFalseAnswer(elemento){
            switch (elemento) {
                case 0:
                    $("#NewAnswers0IsCorrect").remove();
                    bool_value0=!bool_value0;
                    var x = document.createElement("input");

                    x.setAttribute("type", "hidden");
                    x.setAttribute("id", "NewAnswers0IsCorrect");
                    x.setAttribute("name", "NewAnswers["+elemento+"].IsCorrect");
                    x.setAttribute("value", bool_value0);

                    document.getElementById("NewQuestionForm").appendChild(x);
                    break;
                case 1:
                    $("#NewAnswers1IsCorrect").remove();
                    bool_value1=!bool_value1;
                    var x = document.createElement("input");

                    x.setAttribute("type", "hidden");
                    x.setAttribute("id", "NewAnswers1IsCorrect");
                    x.setAttribute("name", "NewAnswers["+elemento+"].IsCorrect");
                    x.setAttribute("value", bool_value1);

                    document.getElementById("NewQuestionForm").appendChild(x);
                    break;
                case 2:
                    $("#NewAnswers2IsCorrect").remove();
                    bool_value2=!bool_value2;
                    var x = document.createElement("input");

                    x.setAttribute("type", "hidden");
                    x.setAttribute("id", "NewAnswers2IsCorrect");
                    x.setAttribute("name", "NewAnswers["+elemento+"].IsCorrect");
                    x.setAttribute("value", bool_value2);

                    document.getElementById("NewQuestionForm").appendChild(x);
                    break;
                case 3:
                    $("#NewAnswers3IsCorrect").remove();
                    bool_value3 = !bool_value3;
                    var x = document.createElement("input");

                    x.setAttribute("type", "hidden");
                    x.setAttribute("id", "NewAnswers3IsCorrect");
                    x.setAttribute("name", "NewAnswers[" + elemento + "].IsCorrect");
                    x.setAttribute("value", bool_value3);

                    document.getElementById("NewQuestionForm").appendChild(x);
                    break;
                default:
                    break;
            }
            
        }

        
       //add rows
        $("#addRowKeyWord").click(function ()
        {
            var rowCountKW = parseInt($("#totalKeyWord").val());
            rowCountKW++;
            $("#totalKeyWord").val(rowCountKW);
            var html = '';
            html += '<div id="inputRowKeyWord" style="margin-top:10px" class="row">';
            html += '<div class="col-6">';
            html += '<div class="form-group">';
            html += '<textarea id="NewKeyWordsText" name="NewKeyWords[' + (rowCountKW - 1) + '].Text"  style="resize: vertical;height:5vh;width:100%"/>';
            html += '</div>';
            html += '</div>';
            html += '<div class="col-1">';
            html += '<div class="form-group">';
            html += '<button id="removeRowKeyWord" type="button" class="btn btn-danger">Remove</button>';
            html += '</div>';
            html += '</div>';
            html += '</div>';
            html += '</div>';

            $('#newRowKeyWord').append(html);
        });

        $(document).on('click', '#removeRowKeyWord', function ()
        {
            var rowCountKW = parseInt($("#totalKeyWord").val());
            rowCountKW--;
            $("#totalKeyWord").val(rowCountKW);
            $(this).closest('#inputRowKeyWord').remove();
        });

        //add rows
        $("#addRowAnswer").click(function () {
            var rowCountAnswer = parseInt($("#totalAnswers").val());
            rowCountAnswer++;
            $("#totalAnswers").val(rowCountAnswer);
            var html = '';
            html += '<div id="inputRowAnswer" style="margin-top:10px" class="row">';
            html += '<input id="NewAnswerQuestionID" type="hidden" value="0" name="NewAnswers[' + (rowCountAnswer - 1) + '].QuestionID"  />';
            html += '<div class="col-2">';
            html += '<div class="form-group">';
            html += '<label for="NewAnswerIsCorrect_' + rowCountAnswer + '">';
            html += '<input id="NewAnswerIsCorrect_' + rowCountAnswer + '" type="checkbox" onclick="handleTrueFalseAnswer(' + (rowCountAnswer - 1) + ');"  />';
            html += '&nbsp;&nbsp; Is Correct</label>';
            html += '</div>';
            html += '</div>';
            html += '<div class="col-9">';
            html += '<div class="form-group">';
            html += '<textarea id="NewAnswerText" name="NewAnswers[' + (rowCountAnswer - 1) + '].Text"  style = "resize: vertical;height:20vh;width:100%"/>';
            html += '</div>';
            html += '</div>';
            html += '<div class="col-1">';
            html += '<div class="form-group">';
            html += '<button id="removeRowAnswer" type="button" class="btn btn-danger">Remove</button>';
            html += '</div>';
            html += '</div>';
            html += '</div>';
            html += '</div>';

            $('#newRowAnswer').append(html);
        });

        $(document).on('click', '#removeRowAnswer', function () {
            var rowCountAnswer = parseInt($("#totalAnswers").val());
            rowCountAnswer--;
            $("#totalAnswers").val(rowCountAnswer);
            $(this).closest('#inputRowAnswer').remove();
        });

        $(document).on('click', '#btnSubmitQuestion', function () {
            $("#errorMsgForm").empty();
            statusNQ = true;
            errorMsg="";

            if ($("#NewQuestionQuestionText").val()==="")
            {
                statusNQ = false;
                errorMsg = errorMsg + "<br/>" + "- Error el texto de la pregunta no puede estar vacio";

            }

            if ($("#NewQuestionExplanation").val() === "") {
                statusNQ = false;
                errorMsg = errorMsg + "<br/>" + "- Error la explicaci&oacute;n no puede estar vacia";

            }

            if ($("#NewQuestionCategoryID").val() === "0") {
                statusNQ = false;
                errorMsg = errorMsg + "<br/>" + "- Error seleccione categoria";

            }

            if ($("#NewQuestionSpecialtyID").val() === null) {
                statusNQ = false;
                errorMsg = errorMsg + "<br/>" + "- Error seleccione especialidad";

            }

            if (!checkAnswers())
            {
                statusNQ = false;
                errorMsg = errorMsg + "<br/>" + "- Error debe haber 4 respuestas y una correcta";
            }
                
            if (statusNQ)
            {
                $("#NewQuestionForm").submit();
            }

            else
            {
                $("#errorMsgForm").append(errorMsg);
            }
            

        });
        function checkAnswers(){
            
            var hayCorrecta=false;
            var hayCuatro=false;
            var rtas = 0;
            
            if($("textarea[name='NewAnswers[0].Text']").val() !== undefined)
            {                   
                if ($("textarea[name='NewAnswers[0].Text']").val() === "") {
                    statusNQ = false;
                    errorMsg = errorMsg + "<br/>" + "- Error la respuesta 1 tiene que estar completa";
                }
                else
                    rtas = rtas+1;
            }

            if($("textarea[name='NewAnswers[1].Text']").val() !== undefined)
            {                
                if ($("textarea[name='NewAnswers[1].Text']").val() === "") {
                    statusNQ = false;
                    errorMsg = errorMsg + "<br/>" + "- Error la respuesta 2 tiene que estar completa";

                }
                else
                    rtas = rtas+1;
            }

            if($("textarea[name='NewAnswers[2].Text']").val() !== undefined)
            {                
                if ($("textarea[name='NewAnswers[2].Text']").val() === "") {
                    statusNQ = false;
                    errorMsg = errorMsg + "<br/>" + "- Error la respuesta 3 tiene que estar completa";

                }
                else
                    rtas = rtas+1;
            }

            if($("textarea[name='NewAnswers[3].Text']").val() !== undefined)
            {                
                if ($("textarea[name='NewAnswers[3].Text']").val() === "") {
                    statusNQ = false;
                    errorMsg = errorMsg + "<br/>" + "- Error la respuesta 4 tiene que estar completa";

                } else
                    rtas = rtas+1;
            }

            if ($("#NewAnswers0IsCorrect").val()) {
                hayCorrecta = true;

            }

            if ($("#NewAnswers1IsCorrect").val()) {
                hayCorrecta = true;

            }

            if ($("#NewAnswers2IsCorrect").val()) {
                hayCorrecta = true;

            }

            if ($("#NewAnswers3IsCorrect").val()) {
                hayCorrecta = true;

            }
            
            if (rtas == 4)
                hayCuatro = true;

            if (hayCorrecta && hayCuatro)
            {
                return true;
            }
            else{

                return false;
            }

        }

        
     </script>

    <script src="https://code.jquery.com/jquery-2.2.4.js"></script>
    <script src="https://rawgit.com/nobleclem/jQuery-MultiSelect/master/jquery.multiselect.js"></script>
    
    <link rel="stylesheet" type="text/css" href="https://rawgit.com/nobleclem/jQuery-MultiSelect/master/jquery.multiselect.css" />

    <script>

        $(function () {
            var my_options = $('.specialtiesClass select option');

            my_options.sort(function (a, b) {
                if (a.text > b.text) return 1;
                if (a.text < b.text) return -1;
                return 0
            })

            $('.specialtiesClass').find('select').empty().append(my_options);

            // set it to multiple
            $('.specialtiesClass').find('select').attr('multiple', true);

            // remove all option
            $('.specialtiesClass').find('select option[value=""]').remove();
            // add multiple select checkbox feature.
            $('.specialtiesClass').find('select').multiselect();
            $('.specialtiesClass').css({ "color": "black" });


        })
    </script>
 }