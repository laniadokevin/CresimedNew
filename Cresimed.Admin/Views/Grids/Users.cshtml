
@using System.Security.Claims;
@using System.Data
@using Cresimed.Core.Entities.ViewModel.Admin.Grid
@model UserGridViewModel
    
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userId = User.FindFirst(ClaimTypes.Name).Value;
    var prevDisabled = !Model.Users.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Users.HasNextPage ? "disabled" : "";
}

<!-- partial -->

        <div class="main-panel">
            <div class="content-wrapper">
                
            <h1 class="h1">Users</h1>
            <br />
                 <form asp-action="Users" method="get">
                    <div class="row">
                        <div class="col-12">
                        <div class="form-actions no-color">
                            <div class="row">
                        <div class="col-md-12">
                          <div class="form-group row">
                            <label class="col-sm-1 col-form-label">Search: </label>
                            <div class="col-sm-3">
                                <input type="text" name="SearchString"  class="form-control" value="@ViewData["CurrentFilter"]" />
                                
                            </div>
                            <label class="col-sm-1 col-form-label">Role: </label>
                            <div class="col-sm-2">
                             <div class="form-group row">

                                  <select  name="RoleFilter" class="form-control form-control-sm">
                                 
                                      @for (int i = 0; i < @Model.Roles.Count(); i++)
                                      {
                                          if(ViewData["RoleFilter"].ToString() == Model.Roles[i].RoleID.ToString())
                                        {
                                            <option value="@Model.Roles[i].RoleID" selected>                                        
                                                @Html.Raw(Model.Roles[i].Name)
                                            </option>
                                        }
                                        else
                                        {
                                            <option value="@Model.Roles[i].RoleID">                                        
                                                @Html.Raw(Model.Roles[i].Name)
                                            </option>
                                        }
                                     }
                            
                                  </select>
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <button type="submit" class="btn btn-secondary" >
                                    <i class="mdi mdi-magnify"> </i>
                                </button>
                                
                                    <a asp-action="Users" class="btn btn-primary"> <i class="mdi mdi-refresh"> </i> </a>
                                <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#exampleModal">
                                    <i class="mdi mdi-plus"> </i>
                                </button>
                            </div>
                          </div>
                        </div>
                       
                      </div>
                           
                        </div>
                           
                        </div>
                    </div>
                </form>
        <h6>
            Total: @ViewData["TotalUsers"] &nbsp;&nbsp
            Filtered: @ViewData["FilteredUsers"] &nbsp;&nbsp
            Showing: @ViewData["ShowingUsers"] &nbsp;&nbsp

        </h6>
                <div class="row">
                    <div class="table-responsive">
                      <table class="table table-hover">
                        <thead>
                          <tr>
                            <th>
                                <a asp-action="Users" asp-route-sortOrder="@ViewData["IDSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                    ID
                                </a>
                            </th>
                            <th>
                                Rol
                            </th>
                            <th>
                                <a asp-action="Users" asp-route-sortOrder="@ViewData["UsernameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                    Username
                                </a>
                            </th>
                            <th>
                                <a asp-action="Users" asp-route-sortOrder="@ViewData["FullnameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                    Fullname
                                </a>
                            </th>
                            <th>
                                <a asp-action="Users" asp-route-sortOrder="@ViewData["EmailSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                    Email
                                </a>
                            </th>
                            <th>
                                <a asp-action="Users" asp-route-sortOrder="@ViewData["EnabledSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                    Enabled
                                </a>
                            </th>
                            <th></th>
                          </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < @Model.Users.Count(); i++)
                            {
                                <tr>
                                    <td>
                                        @Html.Raw(Model.Users[i].UserID)
                                    </td>
                                    <td>
                                        @foreach(var roles in Model.Users[i].UserRoles)
                                        {
                                            if(roles.Enable)
                                                @Html.Raw(roles.Role.Name.Substring(0,3) + ",") 
                                        }
                                    </td>
                                    <td>
                                        @Html.Raw(Model.Users[i].Username)
                                    </td>
                                    <td>
                                        @Html.Raw(Model.Users[i].FullName)
                                    </td>
                                    <td>
                                        @Html.Raw(Model.Users[i].Email)
                                    </td>
                                    <td class="text">
                                        @Html.CheckBoxFor(m=>m.Users[i].Enable,new { @class="chk_user_enable",@userId=@Model.Users[i].UserID })
                                    </td>
                                    <td>

                                    <a href="@Url.Action("ViewUser", "Views",new { id = @Model.Users[i].UserID })">
                                            <i class="mdi mdi-pencil"></i>
                                        </a>
                                        <a href="@Url.Action("DeleteUser", "Edition",new { id = @Model.Users[i].UserID })">
                                            <i class='mdi mdi-delete'></i>
                                        </a>
                                    
                                    </td>
                                </tr>
                            }
                        </tbody>
                      </table>
                    </div>
                </div>
                <br />
                <div class="row">
                        <div class="col-4">
                        </div>
                        <div class="col-4">

                            <a asp-action="Users"|
                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                               asp-route-pageNumber="@(Model.Users.PageIndex - 1)"
                               asp-route-currentFilter="@ViewData["CurrentFilter"]"
                               class="btn btn-default @prevDisabled">
                                Previous
                            </a>
                            <a asp-action="Users"
                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                               asp-route-pageNumber="@(Model.Users.PageIndex + 1)"
                               asp-route-currentFilter="@ViewData["CurrentFilter"]"
                               class="btn btn-default @nextDisabled">
                                Next
                            </a>
                        </div>
                        <div class="col-4">
                        </div>
                    </div>
            </div>
        </div>
        <!-- Modal -->
        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">New User</h5>
                <button type="button" class="btn-secondary" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
                @using (Html.BeginForm("NewUser", "Edition", FormMethod.Post, new{@id="newUser"}))
                {
                  <div class="modal-body">
                      <ul id="ErrorMessage"></ul>
                        <div class="form-group">
                            <label >Full Name</label>
                            @Html.TextBoxFor(m => m.NewUser.FullName, new { @id="newUserFullName", @maxlength = "128", @class="form-control", @placeholder="Fullname" })
                    
                        </div>
                        <div class="form-group">
                            <label >Username</label>
                        <p class="text-danger" id="ErrorUsuarioNoDisponible"></p>
                            @Html.TextBoxFor(m => m.NewUser.Username, new { @id="newUserUsername", @maxlength = "128", @class="form-control", @placeholder="Username" })
                    
                        </div>
                        <div class="form-group">
                            <label >Password</label>
                            @Html.TextBoxFor(m => m.NewUser.Password, new { @id="newUserPassword", @type="password", @maxlength = "128", @class="form-control", @placeholder="Password" })
                    
                        </div>
                        <div class="form-group">
                            <label >Email</label>
                            <p class="text-danger" id="ErrorEmailNoDisponible"></p>
                            @Html.TextBoxFor(m => m.NewUser.Email, new { @id="newUserEmail", @maxlength = "128", @class="form-control", @placeholder="Email" })
                    
                        </div>
                        <div class="form-group">
                        <label>Enabled</label>
                             <div class="form-check">
                                <label class="form-check-label">
                                    <input type="checkbox" > Enable <i class="input-helper"></i>
                                    @Html.CheckBoxFor(m => m.NewUser.Enable, new {@class="form-check-input", @value=true})
                                </label>
                            </div>
                        </div>

                    <label>Roles</label>
                    <div class="form-group rolesClass">

                        <select id="newUserRoles" multiple="multiple" class="select2-selection select2-selection--multiple"
                            asp-for="@Model.NewRoles" asp-items="(List<SelectListItem>)@ViewData["Roles"]">

                        </select>
                    </div>

                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <input type="submit" class="btn btn-primary" value="Save"/>
                  </div>
                }
            </div>
          </div>
        </div>  
    @section Scripts {

    <!-- plugins:js -->
    <script src="~/vendors/js/vendor.bundle.base.js"></script>
    <!-- endinject -->
    <!-- Plugin js for this page -->
    <script src="~/vendors/chart.js/Chart.min.js"></script>
    <script src="~/vendors/progressbar.js/progressbar.min.js"></script>
    <script src="~/vendors/jvectormap/jquery-jvectormap.min.js"></script>
    <script src="~/vendors/jvectormap/jquery-jvectormap-world-mill-en.js"></script>
    <script src="~/vendors/owl-carousel-2/owl.carousel.min.js"></script>
    <script src="~/js/jquery.cookie.js" type="text/javascript"></script>
    <!-- End plugin js for this page -->
    <!-- inject:js -->
    <script src="~/js/off-canvas.js"></script>
    <script src="~/js/hoverable-collapse.js"></script>
    <script src="~/js/misc.js"></script>
    <script src="~/js/settings.js"></script>
    <script src="~/js/todolist.js"></script>
    <!-- endinject -->
    <!-- Custom js for this page -->
    <script src="~/js/dashboard.js"></script>
    <!-- End custom js for this page -->

    <script src="https://code.jquery.com/jquery-2.2.4.js"></script>
    <script src="https://rawgit.com/nobleclem/jQuery-MultiSelect/master/jquery.multiselect.js"></script>
    <link rel="stylesheet" type="text/css" href="https://rawgit.com/nobleclem/jQuery-MultiSelect/master/jquery.multiselect.css" />

    <script>

        $(function () {
            // from http://stackoverflow.com/questions/45888/what-is-the-most-efficient-way-to-sort-an-html-selects-options-by-value-while
            var my_options = $('.rolesClass select option');

            my_options.sort(function (a, b) {
                if (a.text > b.text) return 1;
                if (a.text < b.text) return -1;
                return 0
            })

            $('.rolesClass').find('select').empty().append(my_options);

            // set it to multiple
            $('.rolesClass').find('select').attr('multiple', true);

            // remove all option
            $('.rolesClass').find('select option[value=""]').remove();
            // add multiple select checkbox feature.
            $('.rolesClass').find('select').multiselect();
            $('.rolesClass').css({ "color": "black" });


        })
    </script>
    <script>
            $(".chk_user_enable").click(function() {
                var url = "@Url.Action("EnableOrDisableUser","Edition").ToString()";
                var userId = parseInt($(this).attr("userId"));

                $.ajax({
                    type: 'POST',
                    url: url,
                    data:{id: userId },
                    success: function(enable){
                        if(enable === "True")
                            alert("User Activated Correctly");
                        else
                            alert("User DeActivated Correctly");
                    }
                });
            });
        </script>
    <script>
        $(document).ready(function () {
            /*
            $('#newUserUsername').blur(function () {
                var tb = $('#newUserUsername');
                if ( tb.val() !== "")
                {
                    checkUsername();
                }
            });
            $('#newUserEmail').blur(function () {
                var tb = $('#newUserEmail');
                if ( tb.val() !== "")
                {
                    checkEmail();
                }
            });
            */
            $('#newUser').on('submit', function (e) {

                e.preventDefault();
                
                var validForm = true;


                $("#ErrorMessage").empty();
                $("#ErrorUsuarioNoDisponible").empty();
                $("#ErrorEmailNoDisponible").empty();

                            
                if ($("#newUserFullName").val() === "") {
                    $("#ErrorMessage").append('<li class="text-danger">Completar FullName por favor!</li>');
                    validForm = false;
                }

                if ($("#newUserUsername").val() === "") {
                    $("#ErrorMessage").append('<li class="text-danger">Completar Username por favor!</li>');
                    validForm = false;
                }

                if ($("#newUserPassword").val() === "") {
                    $("#ErrorMessage").append('<li class="text-danger">Completar Password por favor!</li>');
                    validForm = false;
                }
                
                if ($("#newUserEmail").val() === "") {

                    $("#ErrorMessage").append('<li class="text-danger">Completar Email por favor!</li>');
                    validForm = false;

                }
                
                if ($("#newUserRoles").find(':selected').length === 0) {
                    $("#ErrorMessage").append('<li class="text-danger">Completar Roles por favor!</li>');
                    validForm = false;
                }




                if ($("#newUserEmail").val() !== "" && checkEmail()) {

                    $("#ErrorEmailNoDisponible").append('<li class="text-danger">Este Email ya esta registrado por favor intente uno distinto</li>');
                    validForm = false;

                }
                if ($("#newUserUsername").val() !== "" && checkUsername()){
                    $("#ErrorUsuarioNoDisponible").append('<li class="text-danger">Este Usuario ya esta registrado por favor intente uno distinto</li>');
                    validForm = false;

                }




                if (validForm) {
                    $("#ErrorMessage").empty();
                    this.submit();
                }


            });
        });

        function checkUsername(){
            $.ajax({
                url: "@Url.Action("CheckUsernameDisponibility","Edition")" + "?name=" + $("#newUserUsername").val(),
                type: 'GET',
                success: function (response) {
                    return response;
                   // $("#ErrorUsuarioNoDisponible").append('<li class="text-danger">Username No Disponible por favor Modifiquelo!</li>');
                },
                error: function () {
                    return true;
                    alert("error");
                },
                fail: function () {
                    return true;
                },
                done: function (msg) {
                    return msg;
                }
            });
        }

        function checkEmail(){
            $.ajax({
                url: "@Url.Action("CheckEmailDisponibility","Edition")" + "?email=" + $("#newUserEmail").val(),
                type: 'GET',
                success: function (response) {
                  //  $("#ErrorEmailNoDisponible").append('<li class="text-danger">Username No Disponible por favor Modifiquelo!</li>');
                },
                error: function () {
                    alert("error");
                }
            });
        }
    </script>
    }
